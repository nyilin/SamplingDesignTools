% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_weights.R
\name{compute_km_weights}
\alias{compute_km_weights}
\title{Compute Kaplan-Meier type weights for (matched) NCC, possibly with dropped
controls}
\usage{
compute_km_weights(
  cohort,
  t_name = NULL,
  y_name = NULL,
  sample_stat,
  keep_stat = NULL,
  match_var_names = NULL,
  n_per_case,
  n_kept = NULL
)
}
\arguments{
\item{cohort}{Cohort data. A \code{data.frame} or a matrix with column names.}

\item{t_name}{Name of the variable in \code{cohort} for the time of event or
censoring. A \code{string}. Currently do not support scenarios where
subjects enter the cohort at different time. If a vector is supplied, only
the first element will be used.}

\item{y_name}{Name of the variable in \code{cohort} indicating the
event-censoring status of each subject, where 1 indicates events. A
\code{string}. If a vector is supplied, only the first element will be
used.}

\item{sample_stat}{A numeric vector containing sampling and status
information for each subject in \code{cohort}: use 0 for non-sampled
controls, 1 for sampled controls, and integers >=2 for events. The length 
of this vector must be the same as the number of rows in \code{cohort}.}

\item{keep_stat}{A numeric vector indicating whether each subject in
\code{cohort} are kept in the final NCC: use 1 for subjects who were in the
final NCC, and 0 for subjects who were kept or never selected. The length
of this vector must be the same as the number of rows in \code{cohort}.
When unspecified, the function assumes all subjects are kept in the final
NCC.}

\item{match_var_names}{Name(s) of the match variable(s) in \code{cohort} used
when drawing the NCC. A \code{string} vector. Default is \code{NULL}, i.e.,
the NCC was only time-matched.}

\item{n_per_case}{Number of controls matched to each case.}

\item{n_kept}{Number of sampled controls in each set that were kept in the
final NCC. When unspecified, the function assumes all subjects are kept in
the final NCC.}
}
\description{
Compute Kaplan-Meier type weights for (matched) NCC, possibly with dropped
controls
}
\examples{
# Load cohort data
data(cohort_1)
head(cohort_1)
# Load an NCC sampled drawn from cohort_1 using the following code
# ncc_1 <- Epi::ccwc(exit = t, fail = y, controls = 1, 
#                    include = list(age, gender), data = cohort_1)
data(ncc_1)
head(ncc_1)
# Map the NCC sample to the original cohort, break the matching, identify the 
# subjects selected into the NCC, and return this subset with KM type weights 
# computed for them.
# First create the sampling and status indicator:
sample_stat <- numeric(nrow(cohort_1))
sample_stat[unique(ncc_1$Map[ncc_1$Fail == 0])] <- 1
sample_stat[ncc_1$Map[ncc_1$Fail == 1]] <- 2
# Then find the sampled subset and compute weights:
ncc_nodup <- compute_km_weights(cohort = cohort_1, t_name = "t", y_name = "y",
                                sample_stat = sample_stat, n_per_case = 1)
head(ncc_nodup)
}
