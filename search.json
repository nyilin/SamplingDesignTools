[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SamplingDesignTools: Tools for Dealing with Complex Sampling Designs",
    "section": "",
    "text": "Install the SamplingDesignTools package from GitHub (package devtools needed):\n\ninstall.packages(\"devtools\") # if the package is not yet installed\ndevtools::install_github(\"nyilin/SamplingDesignTools\")\n\nLoad package:\n\nlibrary(SamplingDesignTools)\nlibrary(survival)\nlibrary(Epi) # To draw (non-counter-matched) nested case-control sample\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nlibrary(knitr)\n\n\n\n\nThis package uses two simulated cohort data (cohort_1 and cohort_2) for illustrative purpose.\n\n\nDataset cohort_1 consists of 10,000 subjects with age simulated from \\(N(55, 10^2)\\)) and gender simulated with \\(P(\\text{Male}=0.5)\\). The survival outcome simulated from the following true hazard:\n\\[\\log \\{h(t)\\} = \\log \\{h_0\\} + \\log(1.1) \\text{Age} + \\log(2) \\text{Gender}.\\]\nTime (\\(t\\)) is measured in years and censored at 25 years. Censoring is indicated by \\(y=0\\).\n\ndata(\"cohort_1\")\ndim(cohort_1)\n## [1] 10000     5\ntable(cohort_1$y)\n## \n##    0    1 \n## 9418  582\nkable(head(cohort_1))\n\n\n\n\nid\ny\nt\nage\ngender\n\n\n\n\n1\n0\n25.00000\n47\n1\n\n\n2\n0\n10.65152\n58\n0\n\n\n3\n0\n25.00000\n46\n0\n\n\n4\n0\n15.84131\n52\n0\n\n\n5\n0\n22.57659\n49\n0\n\n\n6\n0\n25.00000\n63\n0\n\n\n\n\nm_cox_cohort_1 <- coxph(Surv(t, y) ~ age + gender, data = cohort_1)\nsummary(m_cox_cohort_1)\n## Call:\n## coxph(formula = Surv(t, y) ~ age + gender, data = cohort_1)\n## \n##   n= 10000, number of events= 582 \n## \n##            coef exp(coef) se(coef)      z Pr(>|z|)    \n## age    0.100340  1.105546 0.004213 23.820   <2e-16 ***\n## gender 0.781068  2.183804 0.087990  8.877   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n##        exp(coef) exp(-coef) lower .95 upper .95\n## age        1.106     0.9045     1.096     1.115\n## gender     2.184     0.4579     1.838     2.595\n## \n## Concordance= 0.784  (se = 0.009 )\n## Likelihood ratio test= 643.4  on 2 df,   p=<2e-16\n## Wald test            = 643.8  on 2 df,   p=<2e-16\n## Score (logrank) test = 642.4  on 2 df,   p=<2e-16\n\n\n\n\nDataset cohort_2 consists of 100,000 subjects, with survival outcome simulated from the following true hazard:\n\\[\\log \\{h(t)\\} = \\log \\{h_0\\} + \\log(1.5)x + \\log(4)z + \\log(2)xz +\n\\log(1.01) \\text{Gender} + \\log(1.01) \\text{Age}.\\]\nTime (\\(t\\)) is measured in years and censored at 25 years. Censoring is indicated by \\(y=0\\). Age is also recorded in 6 categories: <35, 36-45, 46-55, 56-65, 66-75 and >75.\n\ndata(\"cohort_2\")\ndim(cohort_2)\n## [1] 100000      8\ntable(cohort_2$y)\n## \n##     0     1 \n## 97227  2773\nkable(head(cohort_2))\n\n\n\n\nid\ny\nt\nx\nage\nage_cat\ngender\nz\n\n\n\n\n1\n0\n25.000000\n1\n-2\n(45,55]\n0\n0\n\n\n2\n0\n19.819801\n1\n-4\n(45,55]\n1\n0\n\n\n3\n0\n25.000000\n1\n-5\n(45,55]\n0\n0\n\n\n4\n0\n12.414616\n1\n20\n(75, Inf]\n1\n0\n\n\n5\n0\n25.000000\n1\n-2\n(45,55]\n0\n1\n\n\n6\n0\n1.019023\n0\n-15\n(35,45]\n1\n0\n\n\n\n\nm_cox_cohort_2 <- coxph(Surv(t, y) ~ x * z + age + gender, data = cohort_2)\nsummary(m_cox_cohort_2)\n## Call:\n## coxph(formula = Surv(t, y) ~ x * z + age + gender, data = cohort_2)\n## \n##   n= 100000, number of events= 2773 \n## \n##             coef exp(coef)  se(coef)      z Pr(>|z|)    \n## x       0.382501  1.465946  0.109906  3.480 0.000501 ***\n## z       1.495078  4.459686  0.126331 11.835  < 2e-16 ***\n## age     0.007139  1.007165  0.001898  3.762 0.000169 ***\n## gender -0.086074  0.917526  0.038010 -2.265 0.023542 *  \n## x:z     0.640698  1.897805  0.135081  4.743 2.11e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n##        exp(coef) exp(-coef) lower .95 upper .95\n## x         1.4659     0.6822    1.1819    1.8183\n## z         4.4597     0.2242    3.4815    5.7127\n## age       1.0072     0.9929    1.0034    1.0109\n## gender    0.9175     1.0899    0.8517    0.9885\n## x:z       1.8978     0.5269    1.4564    2.4730\n## \n## Concordance= 0.762  (se = 0.005 )\n## Likelihood ratio test= 2907  on 5 df,   p=<2e-16\n## Wald test            = 2435  on 5 df,   p=<2e-16\n## Score (logrank) test = 3528  on 5 df,   p=<2e-16"
  },
  {
    "objectID": "counter_match.html",
    "href": "counter_match.html",
    "title": "1  Drawing counter-matched sample",
    "section": "",
    "text": "This section describes how to use draw_ncc_cm() to draw counter-matched nested case-control (NCC) samples, and subsequently how to analyze the sample using a weighted conditional likelihood approach.\nExamples in this section use cohort_1 as the underlying cohort, and considers the continuous variable age as the continuous exposure of interest, just for illustrative purpose.\nReference:"
  },
  {
    "objectID": "counter_match.html#load-packages-and-data",
    "href": "counter_match.html#load-packages-and-data",
    "title": "1  Drawing counter-matched sample",
    "section": "1.1 Load packages and data",
    "text": "1.1 Load packages and data\n\nlibrary(SamplingDesignTools)\nlibrary(survival)\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nlibrary(knitr)\ndata(\"cohort_1\")"
  },
  {
    "objectID": "counter_match.html#counter-match-on-binary-surrogate",
    "href": "counter_match.html#counter-match-on-binary-surrogate",
    "title": "1  Drawing counter-matched sample",
    "section": "1.2 Counter-match on binary surrogate",
    "text": "1.2 Counter-match on binary surrogate\nThis analysis uses dichotomous age (at 50 years) as a surrogate to the actual exposure to draw a counter-matched NCC sample with 1 control per case.\n\ncohort_1$age_bin <- as.numeric(cohort_1$age < 50)\ntable(cohort_1$age_bin)\n## \n##    0    1 \n## 7181 2819\nncc_cm_bin <- draw_ncc_cm(cohort = cohort_1, y_name = \"y\", t_name = \"t\", \n                          match_var_name = \"age_bin\", \n                          include_var_name = c(\"age\", \"gender\"), ml = 1)\nhead(ncc_cm_bin)\n##      set row_id         t n_at_risk n_sampled weight y age_bin age gender\n## 11    11     11  6.952504      4866         1   4866 1       0  60      0\n## 6682  11   6682  6.952504      2002         1   2002 0       1  41      1\n## 29    29     29 11.157250      3802         1   3802 1       0  64      0\n## 6543  29   6543 11.157250      1594         1   1594 0       1  40      0\n## 58    58     58 24.578458      1860         1   1860 1       0  63      0\n## 1434  58   1434 24.578458       810         1    810 0       1  43      1\ntable(ncc_cm_bin$age_bin, ncc_cm_bin$y)\n##    \n##       0   1\n##   0  32 550\n##   1 550  32\nm_clogit_bin <- clogit(y ~ age + gender + strata(set) + offset(log(weight)), \n                       data = ncc_cm_bin)"
  },
  {
    "objectID": "counter_match.html#counter-match-on-categorical-surrogate",
    "href": "counter_match.html#counter-match-on-categorical-surrogate",
    "title": "1  Drawing counter-matched sample",
    "section": "1.3 Counter-match on categorical surrogate",
    "text": "1.3 Counter-match on categorical surrogate\nThis analysis divided age into 4 categories (at 40, 50 and 60 years) to create a categorical surrogate to the exposure, and subsequently drew a counter-matched NCC sample with one control per age category, i.e., in total 3 controls per case.\n\ncohort_1$age_quart <- cut(cohort_1$age, breaks = c(-Inf, 40, 50, 60, Inf), \n                          labels = 1:4, include.lowest = TRUE)\ntable(cohort_1$age_quart)\n## \n##    1    2    3    4 \n##  712 2453 3908 2927\nncc_cm_quart <- draw_ncc_cm(cohort = cohort_1, y_name = \"y\", t_name = \"t\", \n                            match_var_name = \"age_quart\", \n                            include_var_name = c(\"age\", \"gender\"), ml = 1)\nhead(ncc_cm_quart, 20)\n##      set row_id         t n_at_risk n_sampled weight y age_quart age gender\n## 5123  11   5123  6.952504       512         1    512 0         1  39      1\n## 1050  11   1050  6.952504      1756         1   1756 0         2  42      0\n## 11    11     11  6.952504      2672         1   2672 1         3  60      0\n## 9857  11   9857  6.952504      1928         1   1928 0         4  63      0\n## 4445  29   4445 11.157250       413         1    413 0         1  28      1\n## 3770  29   3770 11.157250      1392         1   1392 0         2  42      1\n## 4913  29   4913 11.157250      2116         1   2116 0         3  57      0\n## 29    29     29 11.157250      1475         1   1475 1         4  64      0\n## 9234  58   9234 24.578458       211         1    211 0         1  36      1\n## 7715  58   7715 24.578458       704         1    704 0         2  50      1\n## 3727  58   3727 24.578458      1066         1   1066 0         3  51      0\n## 58    58     58 24.578458       689         1    689 1         4  63      0\n## 7369  67   7369  1.434794       665         1    665 0         1  25      1\n## 9614  67   9614  1.434794      2300         1   2300 0         2  43      1\n## 1404  67   1404  1.434794      3607         1   3607 0         3  60      0\n## 67    67     67  1.434794      2683         1   2683 1         4  65      1\n## 170   89    170 19.254871       269         1    269 0         1  39      1\n## 3947  89   3947 19.254871       933         1    933 0         2  50      0\n## 8190  89   8190 19.254871      1395         1   1395 0         3  53      0\n## 89    89     89 19.254871       922         1    922 1         4  64      1\ntable(ncc_cm_quart$age_quart)\n## \n##   1   2   3   4 \n## 582 582 582 582\nm_clogit_quart <- clogit(y ~ age + gender + strata(set) + offset(log(weight)), \n                         data = ncc_cm_quart)"
  },
  {
    "objectID": "counter_match.html#compare-results",
    "href": "counter_match.html#compare-results",
    "title": "1  Drawing counter-matched sample",
    "section": "1.4 Compare results",
    "text": "1.4 Compare results\n\nresults_1 <- rbind(summary(m_cox_cohort_1)$coef, \n                   summary(m_clogit_bin)$coef, \n                   summary(m_clogit_quart)$coef)\nrownames(results_1) <- NULL\nkable(data.frame(\n  Data = c(\"Full cohort\", \"\", \n           \"NCC-CM, 1 control per case\", \"\", \n           \"NCC-CM, 3 controls per case\", \"\"), \n  Variable = rep(c(\"Age\", \"Male\"), 3), \n  `True HR` = rep(c(1.1, 2), 3),\n  `Estimated HR` = results_1[, \"exp(coef)\"], \n  `SE of log(HR)` = results_1[, \"se(coef)\"], \n  `p-value` = results_1[, \"Pr(>|z|)\"], check.names = FALSE\n), digits = c(0, 0, 1, 2, 3, 3))\n\n\n\n\n\n\n\n\n\n\n\n\nData\nVariable\nTrue HR\nEstimated HR\nSE of log(HR)\np-value\n\n\n\n\nFull cohort\nAge\n1.1\n1.11\n0.004\n0\n\n\n\nMale\n2.0\n2.18\n0.088\n0\n\n\nNCC-CM, 1 control per case\nAge\n1.1\n1.13\n0.013\n0\n\n\n\nMale\n2.0\n3.21\n0.303\n0\n\n\nNCC-CM, 3 controls per case\nAge\n1.1\n1.11\n0.006\n0\n\n\n\nMale\n2.0\n2.56\n0.133\n0"
  },
  {
    "objectID": "ncc_km_weight.html",
    "href": "ncc_km_weight.html",
    "title": "2  Compute KM-type weights for NCC sample",
    "section": "",
    "text": "This section describes how to use compute_km_weights() to draw NCC samples and compute Kaplan-Meier type (KM-type) weights, and subsequently how to analyze the sample using a weighted Cox approach.\nExamples in this section use cohort_2 as the underlying cohort.\nReferences:"
  },
  {
    "objectID": "ncc_km_weight.html#load-packages-and-data",
    "href": "ncc_km_weight.html#load-packages-and-data",
    "title": "2  Compute KM-type weights for NCC sample",
    "section": "2.1 Load packages and data",
    "text": "2.1 Load packages and data\n\nlibrary(SamplingDesignTools)\nlibrary(survival)\nlibrary(Epi) # To draw (non-counter-matched) nested case-control sample\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nlibrary(knitr)\ndata(\"cohort_2\")"
  },
  {
    "objectID": "ncc_km_weight.html#ncc-matched-on-age-and-gender",
    "href": "ncc_km_weight.html#ncc-matched-on-age-and-gender",
    "title": "2  Compute KM-type weights for NCC sample",
    "section": "2.2 1:2 NCC matched on age and gender",
    "text": "2.2 1:2 NCC matched on age and gender\nConsider an idealistic scenario, where the full cohort is available to calculate the KM-type weights. A NCC sample was draw (using Epi::ccwc()) with 2 controls per case, matched on age group and gender.\n\nn_per_case <- 2\nncc_2 <- ccwc(exit = t, fail = y, controls = n_per_case, \n              match = list(age_cat, gender), include = list(x, age, z), \n              data = cohort_2, silent = TRUE)\nnames(ncc_2)[-(1:4)] <- c(\"age_cat\", \"gender\", \"x\", \"age\", \"z\")\nhead(ncc_2, 12)\n##    Set   Map       Time Fail age_cat gender x age z\n## 1    1    36  0.2016047    1 (35,45]      1 1 -16 0\n## 2    1 14705  0.2016047    0 (35,45]      1 1 -14 1\n## 3    1  8990  0.2016047    0 (35,45]      1 1 -12 0\n## 4    2   888  4.9218685    1 (35,45]      1 1 -20 1\n## 5    2 49875  4.9218685    0 (35,45]      1 1 -15 0\n## 6    2 17845  4.9218685    0 (35,45]      1 1 -14 0\n## 7    3  1037 21.4651890    1 (35,45]      1 1 -15 1\n## 8    3 17756 21.4651890    0 (35,45]      1 1 -11 0\n## 9    3 93612 21.4651890    0 (35,45]      1 0 -11 0\n## 10   4  1200 15.7674384    1 (35,45]      1 1 -15 1\n## 11   4 91281 15.7674384    0 (35,45]      1 0 -11 1\n## 12   4 51485 15.7674384    0 (35,45]      1 1 -15 0\n# Create the sampling and status indicator\nsample_stat <- numeric(nrow(cohort_2))\nsample_stat[unique(ncc_2$Map[ncc_2$Fail == 0])] <- 1\nsample_stat[ncc_2$Map[ncc_2$Fail == 1]] <- 2\ntable(sample_stat)\n## sample_stat\n##     0     1     2 \n## 91997  5230  2773\nncc_2_nodup <- compute_km_weights(cohort = cohort_2, t_name = \"t\", y_name = \"y\",\n                                  sample_stat = sample_stat, \n                                  match_var_names = c(\"age_cat\", \"gender\"), \n                                  n_per_case = n_per_case)\n## Start time is 0 for all subjects. Event/censoring time is given by variable t.\n## Joining, by = c(\"age_cat\", \"gender\")\n## Joining, by = \"strata\"\nhead(ncc_2_nodup)\n##    id y          t x age age_cat gender z    km_prob km_weight\n## 18 18 0 23.0020275 1 -11 (35,45]      0 1 0.07969598  12.54769\n## 36 36 1  0.2016047 1 -16 (35,45]      1 0 1.00000000   1.00000\n## 40 40 0 25.0000000 1  17 (65,75]      1 0 0.09368591  10.67396\n## 44 44 0 20.1856606 0  -1 (45,55]      1 0 0.07193216  13.90199\n## 61 61 1 14.8098399 1   7 (55,65]      0 0 1.00000000   1.00000\n## 68 68 0  9.3384792 1  10 (65,75]      0 0 0.04448197  22.48102\nsummary(ncc_2_nodup$km_weight)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##    1.00    1.00   10.64   12.21   13.32  696.20\nm_cox_ncc_2 <- coxph(Surv(t, y) ~ x * z + gender + age, data = ncc_2_nodup,\n                     weights = km_weight, robust = TRUE)\nm_clogit_ncc_2 <- clogit(Fail ~ x * z + strata(Set), data = ncc_2)\n\nBy breaking the matching in the NCC and performing a weighted analysis, users are also able to estimate the absolute risk that is not available from NCC in conventional conditional approach. This is not illustrated here but have been described in following papers:\n\nSalim A, Delcoigne B, Villaflores K, Koh WP, Yuan JM, van Dam RM, Reilly M. Comparisons of risk prediction methods using nested case‐control data. Statistics in medicine. 2017 Feb 10;36(3):455-65.\nDelcoigne B, Colzani E, Prochazka M, Gagliardi G, Hall P, Abrahamowicz M, Czene K, Reilly M. Breaking the matching in nested case–control data offered several advantages for risk estimation. Journal of clinical epidemiology. 2017 Feb 1;82:79-86."
  },
  {
    "objectID": "ncc_km_weight.html#results",
    "href": "ncc_km_weight.html#results",
    "title": "2  Compute KM-type weights for NCC sample",
    "section": "2.3 Compare results",
    "text": "2.3 Compare results\nCompared to conventional conditional logistic regression analysis of matched sets, weighted Cox analysis of sampled subjects produces smaller SE, and provides estimates for matching factors.\n\nresults_2 <- rbind(summary(m_cox_cohort_2)$coef, \n                   summary(m_clogit_ncc_2)$coef, \n                   summary(m_cox_ncc_2)$coef[, -3])\nresults_2 <- data.frame(Variable = rownames(results_2), results_2, \n                        check.names = FALSE)\nrownames(results_2) <- NULL\nkable(data.frame(\n  Data = c(\"Full cohort\", rep(\"\", 4), \n           \"NCC (clogit)\", rep(\"\", 2), \n           \"NCC (weighted Cox)\", rep(\"\", 4)), \n  Variable = results_2$Variable, \n  `True HR` = c(c(1.5, 4, 1.01, 1.01, 2), \n                c(1.5, 4, 2), c(1.5, 4, 1.01, 1.01, 2)),\n  `Estimated HR` = results_2[, \"exp(coef)\"], \n  `SE of log(HR)` = results_2[, \"se(coef)\"], \n  `p-value` = results_2[, \"Pr(>|z|)\"], check.names = FALSE\n), digits = c(0, 0, 2, 2, 3, 3))\n\n\n\n\n\n\n\n\n\n\n\n\nData\nVariable\nTrue HR\nEstimated HR\nSE of log(HR)\np-value\n\n\n\n\nFull cohort\nx\n1.50\n1.47\n0.110\n0.001\n\n\n\nz\n4.00\n4.46\n0.126\n0.000\n\n\n\nage\n1.01\n1.01\n0.002\n0.000\n\n\n\ngender\n1.01\n0.92\n0.038\n0.024\n\n\n\nx:z\n2.00\n1.90\n0.135\n0.000\n\n\nNCC (clogit)\nx\n1.50\n1.35\n0.122\n0.014\n\n\n\nz\n4.00\n5.05\n0.153\n0.000\n\n\n\nx:z\n2.00\n1.67\n0.163\n0.002\n\n\nNCC (weighted Cox)\nx\n1.50\n1.36\n0.117\n0.009\n\n\n\nz\n4.00\n4.68\n0.143\n0.000\n\n\n\ngender\n1.01\n0.91\n0.054\n0.081\n\n\n\nage\n1.01\n1.01\n0.003\n0.003\n\n\n\nx:z\n2.00\n1.80\n0.154\n0.000"
  },
  {
    "objectID": "ncc_km_weight_proxy.html",
    "href": "ncc_km_weight_proxy.html",
    "title": "3  Compute weights for NCC without full cohort",
    "section": "",
    "text": "KM-type weights can be computed for the NCC sample as long the time of event/censoring for each subject is available, and the number of subjects at risk can be obtained (or approximated) elsewhere.\nExamples in this section use cohort_2 as the underlying cohort, but consider a more realistic scenario where the cohort is no longer available, and subjects at risk are approximated using the number of subjects at risk in a year."
  },
  {
    "objectID": "ncc_km_weight_proxy.html#load-packages-and-data",
    "href": "ncc_km_weight_proxy.html#load-packages-and-data",
    "title": "3  Compute weights for NCC without full cohort",
    "section": "3.1 Load packages and data",
    "text": "3.1 Load packages and data\n\nlibrary(SamplingDesignTools)\nlibrary(survival)\nlibrary(Epi) # To draw (non-counter-matched) nested case-control sample\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nlibrary(knitr)\ndata(\"cohort_2\")"
  },
  {
    "objectID": "ncc_km_weight_proxy.html#coarsen-time",
    "href": "ncc_km_weight_proxy.html#coarsen-time",
    "title": "3  Compute weights for NCC without full cohort",
    "section": "3.2 Coarsen time",
    "text": "3.2 Coarsen time\nTo match NCC sample to the coarsened time frame, create a variable t_yr by rounding the exact event/censoring time, t to the next integer, and use this coarsened time to compute the number at risk:\n\nncc_2$t <- cohort_2$t[ncc_2$Map]\nncc_2$t_yr <- ceiling(ncc_2$t)\ncohort_2$t_yr <- ceiling(cohort_2$t)\nrisk_table_coarse <- compute_risk_table(cohort = cohort_2, t_name = \"t_yr\", \n                                        y_name = \"y\", \n                                        match_var_names = c(\"age_cat\", \"gender\"))\n## Start time is 0 for all subjects. Event/censoring time is given by variable t_yr.\n## Joining, by = c(\"age_cat\", \"gender\")\n## Joining, by = \"strata\"\nhead(risk_table_coarse)\n##   t_event n_event n_at_risk   age_cat gender\n## 1       1       3      1165 (-Inf,35]      0\n## 2       3       2      1045 (-Inf,35]      0\n## 3       4       2       983 (-Inf,35]      0\n## 4       5       1       928 (-Inf,35]      0\n## 5       8       1       806 (-Inf,35]      0\n## 6       9       3       772 (-Inf,35]      0"
  },
  {
    "objectID": "ncc_km_weight_proxy.html#ncc-based-on-coarsened-time",
    "href": "ncc_km_weight_proxy.html#ncc-based-on-coarsened-time",
    "title": "3  Compute weights for NCC without full cohort",
    "section": "3.3 1:2 NCC based on coarsened time",
    "text": "3.3 1:2 NCC based on coarsened time\nIn reality, number at risk at each event time may be approximated by, e.g., size of the relevant sub-population at mid-year. In such case, user may use the following function to generate a template for risk_table_coarse to fill in:\n\nrisk_table_template <- prepare_risk_table(ncc = ncc_2, t_match_name = \"t_yr\", \n                                          y_name = \"Fail\", \n                                          match_var_names = c(\"gender\", \"age_cat\"), \n                                          csv_file = NULL)\nhead(risk_table_template)\n##   t_event gender   age_cat n_at_risk\n## 1       1      0 (-Inf,35]        NA\n## 2       1      0   (35,45]        NA\n## 3       1      0   (45,55]        NA\n## 4       1      0   (55,65]        NA\n## 5       1      0   (65,75]        NA\n## 6       1      0 (75, Inf]        NA\n\nThis template will be written to a csv if specified by csv_file, making it easier to supply information regarding the cohort that is required for computing the KM-type weights.\nAssuming that risk_table_coarse is the approximated risk table obtained from external sources, the KM-type weights for ncc_2 generated in the previous section can be computed using the same compute_km_weights() function and subsequently analyzed using a weighted Cox approach:\n\nncc_nodup2 <- compute_km_weights(ncc = ncc_2[, -1], \n                                 risk_table_manual = risk_table_coarse, \n                                 t_name = \"t\", y_name = \"Fail\", \n                                 t_match_name = \"t_yr\",\n                                 id_name = \"Map\", \n                                 match_var_names = c(\"age_cat\", \"gender\"), \n                                 n_per_case = 5)\n## Make sure input ncc does not include ID of matched sets. Failing to do so results in Errors.\n## Joining, by = c(\"age_cat\", \"gender\")\n## Joining, by = c(\".t_event\", \"age_cat\", \"gender\", \"n_event\")\n## Joining, by = c(\"age_cat\", \"gender\")\n## There are 15120 unique subjects (identified by Map) in the input ncc with 16638\n## rows, therefore the return data only has 15120 rows.\nm_cox_ncc_2_v2 <- coxph(Surv(t, Fail) ~ x * z + age + gender, \n                        data = ncc_nodup2, weights = km_weight, robust = TRUE)"
  },
  {
    "objectID": "ncc_km_weight_proxy.html#results",
    "href": "ncc_km_weight_proxy.html#results",
    "title": "3  Compute weights for NCC without full cohort",
    "section": "3.4 Compare results",
    "text": "3.4 Compare results\nCompare with results when the full cohort is available:\n\nresults_3 <- rbind(summary(m_cox_cohort_2)$coef, \n                   summary(m_cox_ncc_2)$coef[, -3], \n                   summary(m_cox_ncc_2_v2)$coef[, -3])\nresults_3 <- data.frame(Variable = rownames(results_3), results_3, \n                        check.names = FALSE)\nrownames(results_3) <- NULL\nkable(data.frame(\n  Data = c(\"Full cohort\", rep(\"\", 4), \n           \"NCC (weighted Cox)\", rep(\"\", 4),\n           \"NCC (weighted Cox, approximated weights)\", rep(\"\", 4)), \n  Variable = results_3$Variable, \n  `True HR` = rep(c(1.5, 4, 1.01, 1.01, 2), 3),\n  `Estimated HR` = results_3[, \"exp(coef)\"], \n  `SE of log(HR)` = results_3[, \"se(coef)\"], \n  `p-value` = results_3[, \"Pr(>|z|)\"], check.names = FALSE\n), digits = c(0, 0, 2, 2, 3, 3))\n\n\n\n\n\n\n\n\n\n\n\n\nData\nVariable\nTrue HR\nEstimated HR\nSE of log(HR)\np-value\n\n\n\n\nFull cohort\nx\n1.50\n1.47\n0.110\n0.001\n\n\n\nz\n4.00\n4.46\n0.126\n0.000\n\n\n\nage\n1.01\n1.01\n0.002\n0.000\n\n\n\ngender\n1.01\n0.92\n0.038\n0.024\n\n\n\nx:z\n2.00\n1.90\n0.135\n0.000\n\n\nNCC (weighted Cox)\nx\n1.50\n1.36\n0.117\n0.009\n\n\n\nz\n4.00\n4.68\n0.143\n0.000\n\n\n\ngender\n1.01\n0.91\n0.054\n0.081\n\n\n\nage\n1.01\n1.01\n0.003\n0.003\n\n\n\nx:z\n2.00\n1.80\n0.154\n0.000\n\n\nNCC (weighted Cox, approximated weights)\nx\n1.50\n1.48\n0.110\n0.000\n\n\n\nz\n4.00\n4.24\n0.127\n0.000\n\n\n\nage\n1.01\n1.00\n0.002\n0.621\n\n\n\ngender\n1.01\n0.97\n0.038\n0.443\n\n\n\nx:z\n2.00\n1.61\n0.135\n0.000"
  },
  {
    "objectID": "ecc.html",
    "href": "ecc.html",
    "title": "4  Weighted analysis of (more) extreme case-control samples",
    "section": "",
    "text": "An extreme case-control (ECC) study is only interested in “early deaths” design, and a more extreme case-control (MECC) further restricts candidate controls to “longer survivors”. These two types of study designs are described in the figure below.\n\n\n\nExtreme case-control (ECC) and more extreme case-control (MECC). Dots denote events.\n\n\nThis section illustrates the weighted analysis of MECC samples using the conditional approach described in Section 2.2 of Salim et al (2014), using the simulated cohort described in Section 1 of this paper:\n\nSalim A, Ma X, Fall K, Andrén O, Reilly M. Analysis of incidence and prognosis from ‘extreme’ case‐control designs. Statistics in medicine. 2014 Dec 30;33(30):5388-98."
  },
  {
    "objectID": "ecc.html#load-packages-and-data",
    "href": "ecc.html#load-packages-and-data",
    "title": "4  Weighted analysis of (more) extreme case-control samples",
    "section": "4.2 Load packages and data",
    "text": "4.2 Load packages and data\nThe example in this section uses cohort_1 as the underlying cohort.\n\nlibrary(SamplingDesignTools)\nlibrary(survival)\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nlibrary(knitr)\ndata(\"cohort_1\")"
  },
  {
    "objectID": "ecc.html#mecc-matched-on-gender",
    "href": "ecc.html#mecc-matched-on-gender",
    "title": "4  Weighted analysis of (more) extreme case-control samples",
    "section": "4.3 1:2 MECC matched on gender",
    "text": "4.3 1:2 MECC matched on gender\nFor illustrative purpose, a MECC sample was drawn by frequency-matching 2 controls to each case on gender. “Early deaths” were defined as events before \\(\\tau_0 = 5\\) years of follow-up, and “long survivors” were defined as subjects who did not have the event in the first \\(\\tau = 15\\) years of follow-up. Note that an event in a MECC study (y_mecc) has a different definition as an event in the original cohort study.\n\nset.seed(1)\ndat_mecc <- draw_mecc(cohort = cohort_1, tau0 = 5, tau = 15,\n                      id_name = \"id\", t_name = \"t\", delta_name = \"y\",\n                      match_var_names = \"gender\", n_per_case = 2)\n## Joining, by = \"gender\"\n## Joining, by = c(\".t\", \".strata\")\n## Joining, by = \".strata\"\nkable(head(dat_mecc))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny\nt\nage\ngender\ny_mecc\nsurv\nsurv_tau\nset_id_mecc\n\n\n\n\n8756\n1\n2.1351357\n76\n0\n1\n0.9943501\n0.957786\nset_8756\n\n\n8069\n1\n3.6774974\n74\n0\n1\n0.9898270\n0.957786\nset_8069\n\n\n5939\n1\n0.8364486\n49\n0\n1\n0.9979733\n0.957786\nset_5939\n\n\n1756\n1\n4.3993170\n63\n0\n1\n0.9878869\n0.957786\nset_1756\n\n\n7955\n1\n4.4904526\n64\n0\n1\n0.9876400\n0.957786\nset_7955\n\n\n1531\n1\n2.5664238\n69\n0\n1\n0.9918995\n0.957786\nset_1531\n\n\n\n\ntable(y = dat_mecc$y, y_mecc = dat_mecc$y_mecc)\n##    y_mecc\n## y     0   1\n##   0 397   0\n##   1  11 204\n\nAs the conditional analysis of the MECC sample assumes individual matching, the function draw_mecc randomly matches controls to each case to form matched sets, indicated by the variable set_id_mecc. In addition, this function provides the estimated baseline survival probabilities (i.e., \\(\\hat{S}(t_i)\\) and \\(\\hat{S}(\\tau)\\)) that are needed to compute the weighted likelihood.\nThe weighted approach estimates the HR, where all covariates need to be centred at the cohort average:\n\ndat_mecc$age_c <- dat_mecc$age - mean(cohort_1$age)\n# When there is only a single coefficient in, users should provide reasonable \n# lower and upper limits for the estimate:\nm_mecc <- analyse_mecc_cond(\n  y_name = \"y_mecc\", x_formula = ~ age_c, set_id_name = \"set_id_mecc\",\n  surv = dat_mecc$surv, surv_tau = dat_mecc$surv_tau, mecc = dat_mecc,\n  lower = -1, upper = 1 \n)\n## Warning in optimize(function(par) fn(par, ...)/con$fnscale, lower = lower, : NA/\n## Inf replaced by maximum positive value\n\n## Warning in optimize(function(par) fn(par, ...)/con$fnscale, lower = lower, : NA/\n## Inf replaced by maximum positive value\nround(m_mecc$coef_mat[, -1], 3)\n##        est exp_est   se pval\n## age_c 0.11   1.116 0.01    0"
  },
  {
    "objectID": "ecc.html#compare-results",
    "href": "ecc.html#compare-results",
    "title": "4  Weighted analysis of (more) extreme case-control samples",
    "section": "4.4 Compare results",
    "text": "4.4 Compare results\n\ncoef_cox_cohort_1 <- summary(m_cox_cohort_1)$coef\nkable(data.frame(\n  Data = c(\"Full cohort\", \"1:2 MECC, weighted\"), \n  Variable = \"Age\", \n  `True HR` = 1.1,\n  `Estimated HR` = c(coef_cox_cohort_1[\"age\", \"exp(coef)\"], \n                     m_mecc$coef_mat[\"age_c\", \"exp_est\"]), \n  `SE of log(HR)` = c(coef_cox_cohort_1[\"age\", \"se(coef)\"], \n                     m_mecc$coef_mat[\"age_c\", \"se\"]), \n  `p-value` = c(coef_cox_cohort_1[\"age\", \"Pr(>|z|)\"], \n                     m_mecc$coef_mat[\"age_c\", \"pval\"]), \n  check.names = FALSE\n), digits = c(0, 0, 1, 2, 3, 3))\n\n\n\n\n\n\n\n\n\n\n\n\nData\nVariable\nTrue HR\nEstimated HR\nSE of log(HR)\np-value\n\n\n\n\nFull cohort\nAge\n1.1\n1.11\n0.004\n0\n\n\n1:2 MECC, weighted\nAge\n1.1\n1.12\n0.010\n0"
  }
]